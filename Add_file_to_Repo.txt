How to integrate GitHub on a mac


//To add Repo from Git
1. Make a repository in GitHub

2. Copy the GitHub link

3. Open Terminal and navigate to the folder where you want your root GitHub folder to be

4. In the Terminal write: git clone ‘url’
example: git clone https://github.com/ariktwena/git_project_on_mac.git

5. GitHub will create a folder with the repository name, and a invisible .git file inside


//See Branches
1. Write: git branch


//Add a new branch to work on (development), that doesn't effect the Master
1. Write: git branch branch_name


//Switch to another branch or Master
1. Write: git checkout branch_name

2. add, commit and push the files you are working on via git (next topic)

3. Create a pull request on GitHub.com 

4. The person that reviews the changes can review, merge and delete the branch


//Merge master files into branch
1. Write: git checkout branch_name

2. Write git merge master 


//Push files to Repo Git (master/branch)
1. Got to the git folder from the Terminal

2. Copy paste your files to the folder (User Terminal or Finder)

3. Navigate inside the folder from the Terminal (We have to be inside for .git to work)
example: cd git_project_on_mac

4. To see the files in the folder write: ls

5. To see the files that are not updated in the GitHun Repo, write: git status

6. To add the files write: 
git add filename.txt 
OR 
git add . 
(Adds all files)

7. To se status again if you want, write: git status

8. To commit the files, write: git commit -m "custom message here to developers"
To exit if you forget a message, write: wq (enter)

9. To push the files, write: git push


//To pull files from Terminal
1. Got to the git folder from the Terminal

2. Pull the newest data from git Repo by writing: git pull


//Share project to Git Repo using PHPStrom
1. Click on the folder/project you want to share

2. Press VCS -> Import into version controle -> share project on GitHub

3. Write a Repo name. Make it private on/off. Paste the Repo URL into the Remote and replace "origin"






